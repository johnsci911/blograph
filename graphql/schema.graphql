"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    users: [User!]! @paginate(defaultCount: 10) @guard
    user(id: ID @eq): User @find
    posts: [Post!]! @paginate(defaultCount: 10) @orderBy(column: "updated_at", direction: DESC)
    postsResolver: [Post!]! @field(resolver: "App\\GraphQL\\Queries\\PostsResolver")
    post(id: ID @eq): Post @find
    postResolver(id: ID!): Post @field(resolver: "App\\GraphQL\\Queries\\PostResolver")
    me: User @guard @auth
}

type Mutation {
    createPostResolver(
        user_id: ID!
        title: String! @rules(apply: ["required", "min: 3"])
        body: String! @rules(apply: ["required", "min: 3"])
    ): Post @field(resolver: "App\\GraphQL\\Mutations\\CreatePostResolver")

    updatePost(
        id: ID!
        title: String! @rules(apply: ["required", "min: 3"])
        body: String! @rules(apply: ["required", "min: 3"])
    ): Post @update

    deletePost(id: ID!): Post @delete

    loginTest(
        email: String!
        password: String!
        device_name: String!
    ): AccessTokenTest! @field(resolver: "App\\GraphQL\\Mutations\\LoginTestResolver")
}

type AccessTokenTest {
    token: String!
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!
    name: String!
    email: String!
    posts: [Post!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

type Post {
    id: ID!
    title: String!
    body: String!
    user: User! @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

#import sanctum.graphql
